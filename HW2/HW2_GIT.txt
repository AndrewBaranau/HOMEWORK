
GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

TXT
 #1. Создать внешний репозиторий c названием TXT.
      In GitHub push on the button [New]  
 #2. Клонировать репозиторий TXT на локальный компьютер.
	git clone https://github.com/AndrewBaranau/TXT.git	
 #3. Внутри локального TXT создать файл “new.txt”.
	cat > new.txt
 #4. Добавить файл под гит.
	git add .
 #5. Закоммитить файл.
	git commit -m "create new.txt"
 #6. Отправить файл на внешний GitHub репозиторий.
	git push
 #7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
 #     Всё написать в формате TXT.
	  vim new.txt
	  -text -
	  [Shift:]+[w]+[q]
  #8. Отправить изменения на внешний репозиторий.
	git config -am "Add and commit new.txt"                                                                                   
    git config --global alias.ac '!git add -A && git commit -m'
	git ac -m   
	git push	
 #9. Создать файл preferences.txt
	nano preferences.txt
 #10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате TXT.
	add text
	[Cntr]+[x]+[y]
 #11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
	nano skill.txt
	add information to skill.txt
	[Cntr]+[x]+[y]
 #12. Сделать коммит в одну строку.
	git ac -skill_preferences 
 #13. Отправить сразу 2 файла на внешний репозиторий.
	git push
 #14. На веб интерфейсе создать файл bug_report.txt.
	[ADD FILE] [COMMIT]
 #15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	[COMMIT]
 #16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
     ID #2
 #17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	[COMMIT]
 #18. Синхронизировать внешний и локальный репозиторий TXT
	git pull 

JSON
 #19. Создать внешний репозиторий c названием JSON.
	In GitHub push on the button [New]	
 #20. Клонировать репозиторий JSON на локальный компьютер.
	git clone https://github.com/AndrewBaranau/JSON.git
 #21. Внутри локального JSON создать файл “new.json”.
	cat > new.json
 #22. Добавить файл под гит.
	git ac -"push_new.json"
 #23. Закоммитить файл.
 #24. Отправить файл на внешний GitHub репозиторий.
	git push
 #25. Отредактировать содержание файла “new.json” - написать информацию о себе 
 #(ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
 #    Всё написать в формате JSON.
    cat>new.json  
    {
     "name": {
	          "FirstName": "Andrei",
			  "LastName": "Baranau"
			  }
     "age": 41,
     "pet": null,
     "future_salary": 1770
      
    }
 #26. Отправить изменения на внешний репозиторий.
	git ac -correct
	git push
 #27. Создать файл preferences.json
	nano preferences.json
 #28. В файл preferences.json добавить информацию о своих предпочтениях 
 #(Любимый фильм, любимый сериал, любимая еда, любимое время года, стрaна которую хотели бы посетить) в формате JSON.
	nano preferences.json
	{
     "Best_film": "All USSR comedise",
	 "Best_serial": "Doctor House",
     "Favorite_food": "Milk",
     "Favorit_season": "Winter",
     "CountryToVisit": "Japan"
    }
 #29. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	cat skill.json
 #30. Отправить сразу 2 файла на внешний репозиторий.
	git ac -"add two files"
	git push
 #31. На веб интерфейсе создать файл bug_report.json.
	push [Add File]
 #32. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push [Comit  changes]
 #33. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 
 #34. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
    [Commit changes]
 #35. Синхронизировать внешний и локальный репозиторий JSON
	git pull


XML
 #36. Создать внешний репозиторий c названием XML.
	In GitHub push on the button [New]
 #37. Клонировать репозиторий XML на локальный компьютер.
	git clone https://github.com/AndrewBaranau/XML.git
 #38. Внутри локального XML создать файл “new.xml”.
	cat > new.xml
 #39. Добавить файл под гит.
	git add new.xml
 #40. Закоммитить файл.
	git commit -m "Commit new.xml"
 #41. Отправить файл на внешний GitHub репозиторий.
	git push
 #42. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
 #   Всё написать в формате XML.
     add text
 #43. Отправить изменения на внешний репозиторий.
	git ac -"add_commit"
	git push
 #44. Создать файл preferences.xml
	cat > preferences.xml
 #45.В файл preferences.xml добавить информацию о своих предпочтениях 
 #  (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	git ac "add_commit"
 #46. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	nano skill.xml
 #47. Сделать коммит в одну строку.
	git ac "commit in one line"
 #48. Отправить сразу 2 файла на внешний репозиторий.
	git push
 #49. На веб интерфейсе создать файл bug_report.xml.
	[Add file] + [Create new file]
 #50. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	[Commit changes]
 #51. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	write file bug_report.xml
 #52. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	[Commit changes]
 #53. Синхронизировать внешний и локальный репозиторий XML
	git pull
HW2 (Git Intro).txt
HW2 (Git Intro).txt. На экране.